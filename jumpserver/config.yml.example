# SECURITY WARNING: keep the secret key used in production secret!
# $ cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 49;echo
SECRET_KEY:

# SECURITY WARNING: keep the bootstrap token used in production secret!
BOOTSTRAP_TOKEN:

# Development env open this, when error occur display the full process track, Production disable it
DEBUG: false

# DEBUG, INFO, WARNING, ERROR, CRITICAL can set. See https://docs.djangoproject.com/en/1.10/topics/logging/
LOG_LEVEL: WARNING
LOG_DIR: /opt/jumpserver/logs/

# Session expiration setting, Default 24 hour, Also set expired on on browser close
SESSION_COOKIE_AGE: 86400
SESSION_EXPIRE_AT_BROWSER_CLOSE: true

# Database setting, Support sqlite3, mysql, postgres ....
# See https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# SQLite setting:
# DB_ENGINE: sqlite3
# DB_NAME:

# MySQL or postgres setting like:
DB_ENGINE:
DB_HOST:
DB_PORT:
DB_USER:
DB_PASSWORD:
DB_NAME:

# When Django start it will bind this host and port
# ./manage.py runserver 127.0.0.1:8080
HTTP_BIND_HOST: 0.0.0.0
HTTP_LISTEN_PORT: 8080

# Use Redis as broker for celery and web socket
REDIS_HOST:
REDIS_PORT:
REDIS_PASSWORD:
REDIS_DB_CELERY:
REDIS_DB_CACHE:

# Use OpenID authorization
# BASE_SITE_URL: http://localhost:8080
# AUTH_OPENID: false  # True or False
# AUTH_OPENID_SERVER_URL: https://openid-auth-server.com/
# AUTH_OPENID_REALM_NAME: realm-name
# AUTH_OPENID_CLIENT_ID: client-id
# AUTH_OPENID_CLIENT_SECRET: client-secret

# OTP settings
# OTP_VALID_WINDOW: 0
# OTP_ISSUER_NAME: Jumpserver
